---
// @ts-nocheck
import Console from "@console";
import Section from "@components/Section.astro";

var proxy = [
    {
        name: "Bing AI Always",
        author: "Sylvie",
        url: "/js/scripts/bingAI.js",
        description: "DYNAMIC ONLY: Always have Bing AI on any browser by setting the userAgent of the page. Injects in both worker and client-side",
        id: "proxy-0001"
    },
    {
        name: "AdBlocker",
        author: "avd3",
        url: "/js/scripts/adBlocker.js",
        description: "Works on all proxies.",
        id: "proxy-0002"
    },
    {
        name: "Dark Mode",
        author: "Riftriot",
        url: "/js/scripts/darkMode.js",
        description: "If the website is not in dark mode, this script will invert all colors on the website.",
        id: "proxy-0003"
    }
]

var modules = [
    {
        name: "Change something",
        author: "Riftriot",
        url: "/js/testscript.js",
        description: "Change something in homepage",
        id: "modules-0001"
    }
]
---

<Console title="User Scripts">
    <Section>
        <h1 class="text-xl">Proxy Injection Scripts</h1>
        <p>Scripts are run on both SW (excluding Aero) and proxy client (both excluding Rammerhead).</p>
        <p>Usermade scripts are not supported because it's very easy to make a script to steal your information.</p>
        <div style={{
            display: 'flex',
            justifyContent: 'center',
            alignItems: 'center',
            flexWrap: 'wrap',
        }}>
            {
                proxy.map((script) => (
                    <div id={script.id} class="element">
                        <style scoped>
                            .play {
                                width: 250px;
                                height: 85px;
                                border-bottom-right-radius: 25px;
                                border-bottom-left-radius: 25px;
                                bottom: 0;
                                margin: 0 auto;
                                display: flex;
                                align-items: center;
                                justify-content: center;
                                position: absolute;
                            }
                
                            .installbutton {
                                width: 150px;
                                height: 50px;
                                border: 1px solid #333;
                                margin-left: auto;
                                margin-right: auto;
                                border-radius: 15px;
                                background-color: var(--settings-2);
                                transition: 0.3s;
                            }
                
                            .installbutton:hover {
                                width: 175px;
                                transition: 0.3s;
                            }
                
                            .installtext {
                                text-align: center;
                                font-weight: bold;
                                color: var(--font-color);
                                font-size: 18px;
                                padding-top: 10px;
                            }
                
                            .element {
                                border: 1px solid var(--settings-3);
                                float: left;
                                height: 205px;
                                width: 250px;
                                color: var(--font-color);
                                background-color: var(--settings-1);
                                border-radius: 25px;
                                margin: 10px;
                                position: relative;
                            }
                
                            h2 {
                                font-weight: bold;
                                font-size: 20px;
                                padding-right: 10px;
                                padding-left: 10px;
                                border-bottom: 1px solid var(--settings-3); 
                                line-height: 0.1em;
                            }
                
                            h2 span { 
                                background:var(--settings-1); 
                                padding:0 10px;
                                
                            }

                            h3 {
                                margin-top: 10px;
                                margin-left: 5px;
                            }

                            h3 span {
                                color: var(--nav-btn-color-darker);
                            }
                
                            p {
                                padding-right: 10px;
                                padding-left: 10px;
                                font-size: 13px;
                                color: var(--nav-btn-color-darker);
                            }
                        </style>
                        <br />
                        <h2><span>{script.name}</span></h2>
                        <h3><span>by {script.author}</span></h3>
                        <p style="margin-top: 5px;">{script.description.length > 100 ? script.description.split('').slice(0, 100).join('') + '...' : script.description}</p>
                        <div class="play">
                            <button class="script-button" data-url={script.url} onclick={`scriptEvent(JSON.parse('${JSON.stringify(script)}'))`}>
                                <div class="installbutton">
                                    <p class="installtext" data-id={script.id}>Install</p>
                                </div>
                            </button>
                        </div>
                    </div>
                ))
            }
        </div>
    </Section>

    <Section>
        <h1 class="text-xl">Noctura Module Scripts</h1>
        <p>Scripts are run on Noctura page loads (excluding router loads)</p>
        <div style={{
            display: 'flex',
            justifyContent: 'center',
            alignItems: 'center',
            flexWrap: 'wrap',
        }}>
            {
                modules.map((script) => (
                    <div id={script.id} class="element">
                        <style scoped>
                            .play {
                                width: 250px;
                                height: 85px;
                                border-bottom-right-radius: 25px;
                                border-bottom-left-radius: 25px;
                                bottom: 0;
                                margin: 0 auto;
                                display: flex;
                                align-items: center;
                                justify-content: center;
                                position: absolute;
                            }
                
                            .installbutton {
                                width: 150px;
                                height: 50px;
                                border: 1px solid #333;
                                margin-left: auto;
                                margin-right: auto;
                                border-radius: 15px;
                                background-color: var(--settings-2);
                                transition: 0.3s;
                            }
                
                            .installbutton:hover {
                                width: 175px;
                                transition: 0.3s;
                            }
                
                            .installtext {
                                text-align: center;
                                font-weight: bold;
                                color: var(--font-color);
                                font-size: 18px;
                                padding-top: 10px;
                            }
                
                            .element {
                                border: 1px solid var(--settings-3);
                                float: left;
                                height: 205px;
                                width: 250px;
                                color: var(--font-color);
                                background-color: var(--settings-1);
                                border-radius: 25px;
                                margin: 10px;
                                position: relative;
                            }
                
                            h2 {
                                font-weight: bold;
                                font-size: 20px;
                                padding-right: 10px;
                                padding-left: 10px;
                                border-bottom: 1px solid var(--settings-3); 
                                line-height: 0.1em;
                            }
                
                            h2 span { 
                                background:var(--settings-1); 
                                padding:0 10px;
                                
                            }

                            h3 {
                                margin-top: 10px;
                                margin-left: 5px;
                            }

                            h3 span {
                                color: var(--nav-btn-color-darker);
                            }
                
                            p {
                                padding-right: 10px;
                                padding-left: 10px;
                                font-size: 13px;
                                color: var(--nav-btn-color-darker);
                            }
                        </style>
                        <br />
                        <h2><span>{script.name}</span></h2>
                        <h3><span>by {script.author}</span></h3>
                        <p style="margin-top: 5px;">{script.description.length > 100 ? script.description.split('').slice(0, 100).join('') + '...' : script.description}</p>
                        <div class="play">
                            <button class="script-button" data-url={script.url} onclick={`scriptEvent(JSON.parse('${JSON.stringify(script)}'))`}>
                                <div class="installbutton">
                                    <p class="installtext" data-id={script.id}>Install</p>
                                </div>
                            </button>
                        </div>
                    </div>
                ))
            }
        </div>
    </Section>

    <script type="module">
        const scripts = await caches.open('astro-scripts');
        const modules = await caches.open('astro-modules');

        document.querySelectorAll("p.installtext").forEach((text) => {
            const scriptInfo = (JSON.parse(localStorage.getItem("scripts")) || {})[text.dataset.id];

            (!scriptInfo || scriptInfo === "uninstalled") ? text.innerText = "Install" : text.innerText = "Uninstall";
        });

        window.scriptEvent = (script) => {
            const type = script.id.split("-")[0];
            const scriptInfo = (JSON.parse(localStorage.getItem("scripts")) || {})[script.id];

            if (type === "proxy") {
                (!scriptInfo || scriptInfo === "uninstalled") ? window.installScript(script) : window.uninstallScript(script);
            } else if (type === "module") {
                // for the script to be in an installed state it must have to be initialized previously
                (scriptInfo === "installed") ? window.installModule(script) : window.uninstallModule(script);
            }
        }

        const reqScript = (url) => {
            return new Promise((resolve, reject) => {
                fetch(url).then((res) => {
                    res.text().then((text) => {
                        resolve(text)
                    })
                })
            })
        }

        const setScript = (id, type) => {
            const scripts = JSON.parse(localStorage.getItem("scripts")) || {};
            scripts[id] = type;
            localStorage.setItem("scripts", JSON.stringify(scripts));
        }

        // (un)install scripts will load information into localStorage instead because it is loaded into memory (faster)

        window.installScript = async (script) => {
            notify.show("Fetching Data", "info", 2000);

            const data = await reqScript(script.url);

            await notify.hide();
            notify.show("Installing Script", "info", 2000);

            await scripts.put('/' + script.id + '.js', new Response(data, {
                headers: {
                    'Content-Type': 'application/javascript'
                }
            }));

            await window.registerSW();

            await notify.hide();
            notify.show("Script Installed", "success", 2000);

            document.querySelector(`p.installtext[data-id=${script.id}]`).innerText = "Uninstall";
            setScript(script.id, "installed");

            setTimeout(() => {
                window.location.reload();
            }, 2000);
        }

        window.uninstallScript = async (script) => {
            notify.show("Uninstalling Script", "info", 2000);
            await notify.hide();
            await scripts.delete("/" + script.id + ".js");

            await notify.hide();
            notify.show("Script Uninstalled", "success", 2000);

            document.querySelector(`p.installtext[data-id=${script.id}]`).innerText = "Install";
            setScript(script.id, "uninstalled");

            setTimeout(() => {
                window.location.reload();
            }, 2000);
        }

        window.installModule = async (script) => {
            notify.show("Fetching Data", "info", 2000);

            const data = await reqScript(script.url);

            await notify.hide();
            notify.show("Installing Module", "info", 2000);

            await modules.put('/' + script.id + '.js', new Response(data, {
                headers: {
                    'Content-Type': 'application/javascript'
                }
            }));

            await notify.hide();
            notify.show("Module Installed", "success", 2000);

            document.querySelector(`p.installtext[data-id=${script.id}]`).innerText = "Uninstall";
            setScript(script.id, "installed");
        }

        window.uninstallModule = async (script) => {
            notify.show("Uninstalling Script", "info", 2000);
            await notify.hide();
            await scripts.delete("/" + script.id + ".js");

            await notify.hide();
            notify.show("Script Uninstalled", "success", 2000);

            document.querySelector(`p.installtext[data-id=${script.id}]`).innerText = "Install";
            setScript(script.id, "uninstalled");
        }
    </script>
</Console>
